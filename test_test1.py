# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from sre_constants import globalConstants
from pathlib import Path
from datetime import date
from webdriver_manager.chrome import ChromeDriverManager
from time import sleep
import openpyxl
from selenium.webdriver.support.select import Select

#Asagıda yazılan kodlar Selenium İdede yazılmıs Daha sonra Refactor Edilmiştir.

class TestTest1():
  
  def waitForElementVisible(self,locator,timeout=2):
    WebDriverWait(self.driver,timeout).until(expected_conditions.visibility_of_element_located(locator))

  def setup_method(self, method):
    self.driver = webdriver.Chrome(ChromeDriverManager().install())
    self.folderPath =str (date.today())
    Path(self.folderPath).mkdir(exist_ok=True)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_test1(self):#Basarısız Giris İsleminin Gösterilmesi
    self.driver.get("https://www.saucedemo.com/")
    self.driver.maximize_window()
    self.waitForElementVisible((By.CSS_SELECTOR, "*[data-test=\"username\"]"))
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").send_keys("1")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").send_keys("1")
    self.driver.find_element(By.CSS_SELECTOR, ".error-message-container").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"login-button\"]").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"login-button\"]")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    assert self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"error\"]").text == "Epic sadface: Username and password do not match any user in this service"
    self.driver.save_screenshot(f"{self.folderPath}/test_test1.png")
  
  def test_test0(self):#Yapılacak Secim İsleminin Opsiyonlarının Gösterilmesi
    self.driver=webdriver.Chrome(ChromeDriverManager().install())
    self.driver.get("https://www.saucedemo.com/")
    self.driver.maximize_window()
    self.driver.find_element(By.ID, "user-name").send_keys("standard_user")
    self.driver.find_element(By.ID, "password").send_keys("secret_sauce")
    self.driver.find_element(By.ID, "login-button").click()
    self.driver.find_element(By.CLASS_NAME, "product_sort_container")
    sleep(3)
    dropdown=self.driver.find_element(By.XPATH, "/html/body/div/div/div/div[1]/div[2]/div/span/select")
    urun=Select(dropdown)
    urun_sort=urun.options
    for tip in urun_sort:
      self.driver.save_screenshot(f"{self.folderPath}/test_test0.png")
      print(tip.text)
      sleep(5)
  
  def test_test2(self):#Siteye Başarılı Bir Sekilde Giriş Yapıldıgının  Gösterilmesi İcin Baslik Kontrolu
    self.driver.get("https://www.saucedemo.com/")
    self.driver.maximize_window()
    self.waitForElementVisible((By.CSS_SELECTOR, "*[data-test=\"username\"]"))
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").send_keys("standard_user")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").send_keys("secret_sauce")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"login-button\"]").click()
    self.waitForElementVisible((By.CSS_SELECTOR, ".title"))
    assert self.driver.find_element(By.CSS_SELECTOR, ".title").text == "Products"
    self.driver.save_screenshot(f"{self.folderPath}/test_test2.png")
  
  def test_test3(self):#Urunlerin Fiyatlarına Göre Filtrelenmesi Ve İslemin Listenin İlk Urunu Uzerinde Kontrol Edilmesi
    self.driver.get("https://www.saucedemo.com/")
    self.driver.maximize_window()
    self.waitForElementVisible((By.CSS_SELECTOR, "*[data-test=\"username\"]"))
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").send_keys("standard_user")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").send_keys("secret_sauce")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"login-button\"]").click()
    self.waitForElementVisible((By.CSS_SELECTOR, "*[data-test=\"product_sort_container\"]"))
    self.driver.find_element(By.CSS_SELECTOR, "#inventory_container #inventory_container").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "#item_2_title_link > .inventory_item_name").text == "Sauce Labs Onesie"
    self.driver.save_screenshot(f"{self.folderPath}/test_test3.png")
  
  def test_test4(self):#Urun Satınalma İslemin Yapılması ve Urunlerin Fiyat Toplamı Degeri Uzerinden Kontrolu
    self.driver.get("https://www.saucedemo.com/")
    self.driver.maximize_window()
    self.waitForElementVisible((By.CSS_SELECTOR, "*[data-test=\"username\"]"))
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").send_keys("standard_user")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").send_keys("secret_sauce")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"login-button\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"add-to-cart-sauce-labs-backpack\"]").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"add-to-cart-sauce-labs-backpack\"]")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"add-to-cart-sauce-labs-bike-light\"]").click()
    self.driver.find_element(By.LINK_TEXT, "2").click()
    self.waitForElementVisible((By.CSS_SELECTOR, "*[data-test=\"continue-shopping\"]"))
    assert self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"continue-shopping\"]").text == "Continue Shopping"
    self.driver.save_screenshot(f"{self.folderPath}/test_test4.png")

  def test_test5(self):#Sauce Demo Sitesinin Hakkında Bilgi Araması
    self.driver.get("https://www.saucedemo.com/")
    self.driver.maximize_window()
    self.waitForElementVisible((By.CSS_SELECTOR, "*[data-test=\"username\"]"))
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").send_keys("standard_user")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").send_keys("secret_sauce")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"login-button\"]").click()
    self.waitForElementVisible((By.ID, "react-burger-menu-btn"))
    self.driver.find_element(By.ID, "react-burger-menu-btn").click()
    self.driver.find_element(By.ID, "inventory_sidebar_link").click()
    self.driver.find_element(By.ID, "inventory_sidebar_link").click()
    self.driver.find_element(By.ID, "about_sidebar_link").click()
    assert self.driver.title == "Sauce Labs: Cross Browser Testing, Selenium Testing & Mobile Testing"
    self.driver.save_screenshot(f"{self.folderPath}/test_test5.png")
  
